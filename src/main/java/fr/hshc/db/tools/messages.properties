# Menu options
SELECT_OPTION=\nSelect an option:
CRAWL_CHOICE=1. Crawl the database and output schema hierarchy (YAML)
GEN_DDL_CHOICE=2. Generate DDL for tables in input YAML file
DDL_TRANSLATOR_CHOICE=3. Translate DDL from one DBMS to another
EXIT_CHOICE=4. Exit
ERROR_CONFIG_FILE_NOT_PROVIDED=Please provide the path to the TOML configuration file.
ERROR_DB_CRAWL_FAILED=Failed to crawl the database '{}'.
ERROR_FILE_NOT_FOUND=TOML configuration file '{}' not found in the working directory '{}'.
ERROR_LOAD_CONF_FAILED=Failed to load configuration or execute operation.
EXITING=Exiting...
INFO_DB_CRAWLED=Crawling database '{}'
INFO_SKIP_MENU=Input YAML file detected. Skipping menu and generating DDL...
INPUT_YAML_FILE_PATH=Enter the path to the input YAML file: 
INVALID_OPTION=Invalid option. Please try again.
ERROR_YAML_LOADING_FAILED=Failed to load yaml file {}. Please make sure that your given path is either absolute or relative to the folder "{}"
INFO_DDL_GEN=Generating DDL for database '{}'
ERROR_DDL_FETCHING_FAILED=Failed to fetch DDL for table '{}.{}.{}'. Skipping.
INFO_DDL_OUTPUT_FILE=DDL statements written to '{}'.
ERROR_DDL_GEN_FAILED=Failed to generate DDL statements.
ERROR_DDL_GEN_FAILED_FOR_DB=Failed to generate DDL for database '{}'.

# DDL Translator messages
INPUT_DDL_FILE_PATH=Enter the path to the input DDL file: 
INPUT_TYPE_MAPPING_FILE_PATH=Enter the path to the type mapping CSV file: 
INPUT_OUTPUT_DDL_FILE_PATH=Enter the path for the output DDL file: 
INFO_TRANSLATING_DDL=Translating DDL from '{}' to '{}'
INFO_DDL_TRANSLATION_COMPLETE=DDL translation complete. Output written to '{}'
ERROR_DDL_TRANSLATION_FAILED=An error occurred during DDL translation.


ERROR_USAGE=Usage: java DDLTranslator <inputDDLFile> <typeMappingCSV> <outputDDLFile>

# CLI Help
HELP_HEADER=Usage: java -jar dbcrawler.jar [OPTIONS]
HELP_CRAWL=--crawl <TOML_FILE>               Crawl the database(s) specified in the TOML file and output schema hierarchy (YAML).
HELP_DDL_GEN=--ddl-gen <TOML_FILE> <YAML>    Generate DDL for tables using the given YAML and TOML configuration files.
HELP_DDL_TRANSLATE=--ddl-translate <DDL_FILE> <MAPPING_TYPES_CSV> <TOML_FILE>   Translate a DDL file using the given type mapping CSV file and produce an output DDL file.
HELP_MENU=--menu                             Launch the interactive menu for all operations.
HELP_EXIT=--help                             Show this help message.

# CLI Errors
ERROR_CONFIG_FILE_AND_YAML_REQUIRED=TOML configuration file and YAML file are required for this operation.
ERROR_DDL_TRANSLATION_ARGUMENTS_REQUIRED=Input DDL, type mapping CSV, and output DDL file paths are required for this operation.
ERROR_INVALID_OPTION=Invalid command-line option: '{}'

# Paths
INPUT_TOML_FILE_PATH=Enter the path to the TOML configuration file:

INPUT_TYPE_CSV_SEPARATOR=Enter the CSV separator:

